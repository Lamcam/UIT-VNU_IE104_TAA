<!DOCTYPE html>
<html lang="vi">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/styles/pages/base.css" />
  <link rel="stylesheet" href="/styles/pages/products/index.css" />
  <title>TAA - Trang sản phẩm</title>
</head>

<body>
  <div id="main" class="on-primary">
    <%- include('../../partials/header', { activeIdx: 1 }) %>
    <%- include('../../partials/breadcrumbs', {
      data: [
        { label: 'Trang chủ', link: '/' }, 
        { label: 'Sản phẩm', link: '/products' }
      ]
    }) %>

    <div id="theFilter" class="mt-12">
      <div class="container">
        <div class="product__filter visible">
          <p class="product__title label-large on-surface-text">
            Sắp xếp theo
          </p>
          <button class="product__button js-button btn--outlined">
            <span class="material-symbols-outlined icon-check"> check </span>
            Giảm giá
          </button>
          <button class="product__button js-button btn--outlined">
            <span class="material-symbols-outlined icon-check"> check </span>
            Bán chạy nhất
          </button>
          <div class="dropdown label-large">
            <div class="select product__button">
              <span class="material-symbols-outlined icon-check">
                check
              </span>
              <span class="selected selected2">Giá</span>
              <div class="caret"></div>
              <span class="material-symbols-outlined icon-cancel">
                close
              </span>
            </div>
            <ul class="menu">
              <li class="select__active">Giá: Từ thấp đến cao</li>
              <li>Giá: Từ cao đến thấp</li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <!-- Dành cho việc chia cột nội dung-->
    <div class="container">
      <div class="row mt-12">
        <aside class="aside col-12 col-lg-3">
          <ul class="aside__list body-large primary-text visible">
            <li class="aside__item">
              <span class="aside__item__title">
                <span class="material-symbols-outlined icon-menu">
                  menu
                </span>
                Danh mục sản phẩm
              </span>
            </li>
            <li class="aside__item js-item">
              <span class="aside__header">Trang sức</span>
              <ul class="aside__item__sub-menu js-sub-menu">
                <li class="category" data-category="vong_co">
                  <span>Vòng cổ</span>
                </li>
                <li class="category" data-category="vong_tay">
                  <span>Vòng tay</span>
                </li>
                <li class="category" data-category="hoa_tai">
                  <span>Hoa tai</span>
                </li>
                <li class="category" data-category="nhan">
                  <span>Nhẫn</span>
                </li>
              </ul>
            </li>
            <li class="aside__item js-item">
              <span class="aside__header">Phụ kiện tóc</span>
              <ul class="aside__item__sub-menu js-sub-menu">
                <li class="category" data-category="kep"><span>Kẹp</span></li>
                <li class="category" data-category="day_cot_toc">
                  <span>Dây cột tóc</span>
                </li>
                <li class="category" data-category="cai_toc">
                  <span>Cài tóc</span>
                </li>
                <li class="category" data-category="tram_cai">
                  <span>Trâm cài</span>
                </li>
              </ul>
            </li>
            <li class="aside__item js-item">
              <span class="aside__header">Túi ví</span>
              <ul class="aside__item__sub-menu js-sub-menu">
                <li class="category" data-category="balo">
                  <span>Balo</span>
                </li>
                <li class="category" data-category="tui_xach">
                  <span>Túi</span>
                </li>
                <li class="category" data-category="vi"><span>Ví</span></li>
              </ul>
            </li>
            <li class="aside__item js-item">
              <span class="aside__header">Khác</span>
              <ul class="aside__item__sub-menu js-sub-menu">
                <li class="category" data-category="thiep">
                  <span>Thiệp</span>
                </li>
                <li class="category" data-category="op_lung">
                  <span>Ốp lưng</span>
                </li>
                <li class="category" data-category="mat_kinh">
                  <span>Mắt kính</span>
                </li>
                <li class="category" data-category="day_deo">
                  <span>Dây đeo</span>
                </li>
                <li class="category" data-category="mu_non">
                  <span>Mũ nón</span>
                </li>
                <li class="category" data-category="khau_trang">
                  <span>Khẩu trang</span>
                </li>
              </ul>
            </li>
          </ul>
        </aside>

        <main class="visible row col-12 col-lg-9">
          <div class="row col-12 product__wrapper">
            <% const length = (result.length > 9) ? 9 : result.length;
            for (let idx = 0; idx < length; ++idx) { %>
            <%- include('../../components/product__item', {
                data: result[idx],
              }) %>
            <% } %>
          </div>

          <div class="row col-12">
            <%- include('../../partials/pagination', {
              classList: 'col-12'
            }) %>
          </div>
        </main>
      </div>
    </div>

    <%- include('../../partials/footer') %>
  </div>
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script type="module" src="/scripts/modules/main.js"></script>
  <script src="/scripts/pages/products/index.js"></script>
  <script src="/scripts/partials/product__item.js"></script>

  <script>
    const category = document.querySelectorAll(".category");

    function createProduct(item) {
      let path = "/imgs/products/" + item.cate_name + "/";
      // Create the outer container div
      let productItem = document.createElement("div");
      productItem.classList.add("product__item", "col-4", "col-sm-6");

      // Create the product image container div
      let productImage = document.createElement("div");
      productImage.classList.add("product__image");
      productItem.appendChild(productImage);

      // Create the front image element
      let frontImage = document.createElement("img");
      frontImage.src = path + item.prod_img_urls[1];

      frontImage.alt = "ảnh sản phẩm";
      frontImage.classList.add("img_back");
      productImage.appendChild(frontImage);

      // Create the back image element
      let backImage = document.createElement("img");
      // backImage.src = "../../../public/red-panda-small.jpg";
      backImage.src = path + item.prod_img_urls[0];
      backImage.alt = "ảnh sản phẩm";
      backImage.classList.add("img_font");
      productImage.appendChild(backImage);

      // Create the product body div
      let productBody = document.createElement("div");
      productBody.classList.add("product__body");
      productItem.appendChild(productBody);

      // Create the heart icon element
      let heartIcon = document.createElement("span");
      heartIcon.classList.add(
        "material-symbols-outlined",
        "icon_heart",
        "error-text"
      );
      heartIcon.textContent = "heart_plus";
      productBody.appendChild(heartIcon);

      // Create the product name heading
      let productName = document.createElement("h3");
      productName.classList.add("product__name", "body-large");
      productName.textContent = `${item.prod_name}`;
      productBody.appendChild(productName);

      // Create the product price container div
      let productPrice = document.createElement("div");
      productPrice.classList.add("product__price", "label-large");
      productBody.appendChild(productPrice);

      // Create the current price element
      let currentPrice = document.createElement("p");
      currentPrice.classList.add("product__price__current");
      currentPrice.textContent = `${
parseInt(item.prod_cost) * (1 - parseFloat(item.prod_discount))
        }`;
      productPrice.appendChild(currentPrice);

      // Create the discounted price element
      let discountedPrice = document.createElement("p");
      discountedPrice.classList.add(
        "product__price__discount",
        "outline-variant-text"
      );
      discountedPrice.textContent = `${item.prod_cost}`;
      productPrice.appendChild(discountedPrice);

      // Create the product discount paragraph
      let productDiscount = document.createElement("p");
      productDiscount.classList.add(
        "product__discount",
        "title-medium",
        "error-text"
      );
      productDiscount.textContent = `Giảm ${item.prod_discount * 100}%`;
      productBody.appendChild(productDiscount);

      // Create the product stock label
      let productStock = document.createElement("p");
      let prodAvai = parseInt(item.prod_num_avai);
      let state = "";
      prodAvai ? (state = "Còn hàng") : (state = "Hết hàng");
      productStock.classList.add(
        "product__stock",
        "label-large",
        "primary-text"
      );

      productStock.textContent = state;
      productBody.appendChild(productStock);

      // Create the product button section div
      let productButtonSection = document.createElement("div");
      productButtonSection.classList.add(
        "product__button__section",
        "label-large"
      );
      productItem.appendChild(productButtonSection);

      // Create the quick view button
      let quickViewButton = document.createElement("div");
      quickViewButton.classList.add(
        "product__button__view",
        "product__button__view"
      );
      quickViewButton.textContent = "Xem nhanh";
      productButtonSection.appendChild(quickViewButton);

      // Create the vertical separator div
      let verticalSeparator = document.createElement("div");
      verticalSeparator.classList.add("vertical");
      productButtonSection.appendChild(verticalSeparator);

      // Create the buy now button with link
      let buyNowButton = document.createElement("div");
      buyNowButton.classList.add("product__button__sell");
      productButtonSection.appendChild(buyNowButton);

      let buyNowLink = document.createElement("a");
      buyNowLink.href = "/TAA_FE/src/homepage/cartPage/index.html";
      buyNowLink.textContent = "Mua ngay";
      buyNowButton.appendChild(buyNowLink);

      // Append the product item to the desired container/element
      let container = document.querySelector(".product__wrapper");
      container.appendChild(productItem);

      // generate pop-up
      // Create the root element with class "modal-product"

      const divModalBody = document.createElement("div");
      divModalBody.className = "modal__body";
      const pProductName = document.createElement("p");
      pProductName.className = "modal__product__name headline-medium";
      pProductName.innerHTML = item.prod_name;

      const divModalInfoRate = document.createElement("div");
      divModalInfoRate.className = "modal__info__rate";

      const divRateStar = document.createElement("div");
      divRateStar.className = "rate__star title-medium";
      divRateStar.textContent = "4.8";

      const spanStarFilled = document.createElement("span");
      spanStarFilled.className = "material-symbols-outlined icon--filled";
      spanStarFilled.textContent = "star";

      const spanRateNumber = document.createElement("span");
      spanRateNumber.className = "rate__number title-medium";
      spanRateNumber.textContent = "5 đánh giá";

      const spanNumberBuy = document.createElement("span");
      spanNumberBuy.className = "number__buy title-medium";
      spanNumberBuy.innerHTML = item.prod_num_sold + " đã bán";

      const divModalPrice = document.createElement("div");
      divModalPrice.className = "modal__price";

      const pCost = document.createElement("p");
      pCost.className = "cost body-medium";
      pCost.innerHTML = item.prod_cost + " đ";

      const pCostDiscount = document.createElement("p");
      pCostDiscount.className = "cost__discount headline-small";
      pCostDiscount.innerHTML =
        item.prod_cost * (1 - item.prod_discount) + "đ";

      const divPercentDiscount = document.createElement("div");
      divPercentDiscount.className = "percent__discount body-medium";
      divPercentDiscount.innerHTML = "Giảm " + item.prod_discount * 100;

      const divModalSize = document.createElement("div");
      divModalSize.className = "modal__size label-large";

      const pSizeTitle = document.createElement("p");
      pSizeTitle.className = "size__title bold";
      pSizeTitle.textContent = "Kích thước:";

      const divSizeValue = document.createElement("div");
      divSizeValue.className = "size__value outline-text";
      divSizeValue.textContent = "Freestyle";

      const divModalQuantity = document.createElement("div");
      divModalQuantity.className = "modal__quantity";

      const divQuantityTitle = document.createElement("div");
      divQuantityTitle.className = "quantity__title label-large bold";
      divQuantityTitle.textContent = "Số lượng: ";

      const divQuantityProduct = document.createElement("div");
      divQuantityProduct.className =
        "quantity__product outline-text label-large";

      const divDecrement = document.createElement("div");
      divDecrement.id = "decrement";
      divDecrement.className = "quantity__product-decrement outline-text";
      divDecrement.textContent = "-";

      const inputQuantity = document.createElement("input");
      inputQuantity.type = "number";
      inputQuantity.min = "1";
      inputQuantity.max = "100";
      inputQuantity.step = "1";
      inputQuantity.value = "1";
      inputQuantity.id = "my-input";
      inputQuantity.disabled = true;

      const divIncrement = document.createElement("div");
      divIncrement.id = "increment";
      divIncrement.className = "quantity__product-increment outline-text";
      divIncrement.textContent = "+";

      const pQuantityStock = document.createElement("p");
      pQuantityStock.className = "quantity__stock body-small";
      pQuantityStock.innerHTML = item.prod_num_avai + " sản phẩm sẵn có";

      const divModalButton = document.createElement("div");
      divModalButton.className = "modal__button";

      const buttonCart = document.createElement("button");
      buttonCart.className = "button__cart";
      buttonCart.innerHTML = `
  <span class="material-symbols-outlined">
    add_shopping_cart
  </span>
  Thêm vào giỏ hàng
`;

      const buttonView = document.createElement("button");
      buttonView.className = "button__view btn--filled";
      buttonView.innerHTML =
        "<a href='/products/detail?id='" + item.prod_id + ">Xem chi tiết</a>";

      const divModalContext = document.createElement("div");
      divModalContext.className = "modal__context body-large";

      const divContextInfo = document.createElement("div");
      divContextInfo.className = "context__info mt-12";

      const divContextInfoTitle = document.createElement("div");
      divContextInfoTitle.className = "context__info__title";
      divContextInfoTitle.textContent = "THÔNG TIN SẢN PHẨM";

      const ulContextInfoBody = document.createElement("ul");
      ulContextInfoBody.className = "context__info__body";

      const liInfo1 = document.createElement("li");
      liInfo1.textContent = "Chất liệu vải: Kaki cao cấp.";

      const liInfo2 = document.createElement("li");
      liInfo2.textContent = "Khóa chỉnh size: Được làm bằng inox.";

      const liInfo3 = document.createElement("li");
      liInfo3.textContent = "Phong cách Unisex, phù hợp Nam/Nữ.";

      ulContextInfoBody.appendChild(liInfo1);
      ulContextInfoBody.appendChild(liInfo2);
      ulContextInfoBody.appendChild(liInfo3);

      const divContextDetail = document.createElement("div");
      divContextDetail.className = "context__detail mt-24";

      const divContextDetailTitle = document.createElement("div");
      divContextDetailTitle.className = "context__detail__title";
      divContextDetailTitle.textContent = "MÔ TẢ SẢN PHẨM";

      const ulContextDetailBody = document.createElement("ul");
      ulContextDetailBody.className = "context__detail__body";

      const liDetail1 = document.createElement("li");
      liDetail1.textContent =
        "- Form dáng chuẩn, chắc chắn, form mềm giúp định hình được khuôn mặt.";
      const liDetail2 = document.createElement("li");
      liDetail2.textContent =
        "- Nón được thiết kế để bảo vệ cho vùng mắt, vùng da mặt, da đầu và tóc tránh các tia cực tím độc hại từ ánh nắng mặt trời.";

      const liDetail3 = document.createElement("li");
      liDetail3.textContent =
        "- Giặt bằng nước lạnh không dùng bột giặt trong lần giặt đầu tiên.";

      ulContextDetailBody.appendChild(liDetail1);
      ulContextDetailBody.appendChild(liDetail2);
      ulContextDetailBody.appendChild(liDetail3);

      // Append the elements to the appropriate parents
      divRateStar.appendChild(spanStarFilled);
      divModalInfoRate.appendChild(divRateStar);
      divModalInfoRate.appendChild(spanRateNumber);
      divModalInfoRate.appendChild(spanNumberBuy);

      divModalPrice.appendChild(pCost);
      divModalPrice.appendChild(pCostDiscount);
      divModalPrice.appendChild(divPercentDiscount);

      divModalSize.appendChild(pSizeTitle);
      divModalSize.appendChild(divSizeValue);

      divQuantityProduct.appendChild(divDecrement);
      divQuantityProduct.appendChild(inputQuantity);
      divQuantityProduct.appendChild(divIncrement);

      divModalQuantity.appendChild(divQuantityTitle);
      divModalQuantity.appendChild(divQuantityProduct);
      divModalQuantity.appendChild(pQuantityStock);

      divModalButton.appendChild(buttonCart);
      divModalButton.appendChild(buttonView);

      divContextInfo.appendChild(divContextInfoTitle);
      divContextInfo.appendChild(ulContextInfoBody);

      divContextDetail.appendChild(divContextDetailTitle);
      divContextDetail.appendChild(ulContextDetailBody);

      divModalContext.appendChild(divContextInfo);
      divModalContext.appendChild(divContextDetail);

      divModalBody.appendChild(pProductName);
      divModalBody.appendChild(divModalInfoRate);
      divModalBody.appendChild(divModalPrice);
      // divModalBody.appendChild(divModalColor);
      divModalBody.appendChild(divModalSize);
      divModalBody.appendChild(divModalQuantity);
      divModalBody.appendChild(divModalButton);
      divModalBody.appendChild(divModalContext);

      // Append the root element to the document body
      const modalContainer = document.createElement("div");
      modalContainer.classList.add("modal-container--product");

      const modalProduct = document.createElement("div");
      modalProduct.classList.add("modal-product");

      modalProduct.appendChild(modalContainer);

      // img
      const modalImg = document.createElement("div");
      modalImg.classList.add("modal__img");

      // Create the img-display element
      const imgDisplay = document.createElement("div");
      imgDisplay.classList.add("img-display");

      // Create the img-showcase element
      const imgShowcase = document.createElement("div");
      imgShowcase.classList.add("img-showcase");

      // Create the product images
      for (let i = 0; i < 4; i++) {
        const img = document.createElement("img");
        img.src = `/imgs/products/${item.cate_name}/${item.prod_img_urls[i]}`;
        img.alt = "Product img";
        imgShowcase.appendChild(img);
      }

      imgDisplay.appendChild(imgShowcase);
      modalImg.appendChild(imgDisplay);

      // Create the img-nav element
      const imgNav = document.createElement("div");
      imgNav.classList.add("img-nav");

      // Create the previous button
      const prevBtn = document.createElement("button");
      prevBtn.id = "prevBtn";

      const prevBtnSpan = document.createElement("span");
      prevBtnSpan.classList.add(
        "material-symbols-outlined",
        "arrow-left",
        "primary-text"
      );
      prevBtnSpan.textContent = "arrow_back_ios";

      prevBtn.appendChild(prevBtnSpan);
      imgNav.appendChild(prevBtn);

      // Create the next button
      const nextBtn = document.createElement("button");
      nextBtn.id = "nextBtn";

      const nextBtnSpan = document.createElement("span");
      nextBtnSpan.classList.add(
        "material-symbols-outlined",
        "arrow-right",
        "primary-text"
      );
      nextBtnSpan.textContent = "arrow_forward_ios";

      nextBtn.appendChild(nextBtnSpan);
      imgNav.appendChild(nextBtn);

      modalImg.appendChild(imgNav);

      // Create the img-select element
      const imgSelect = document.createElement("div");
      imgSelect.classList.add("img-select");

      // Create the img-items
      for (let i = 0; i < 4; i++) {
        const imgItem = document.createElement("div");
        imgItem.classList.add("img-item");

        const link = document.createElement("a");
        link.href = "#";
        link.setAttribute("data-id", i + 1);

        const img = document.createElement("img");
        img.src = `/imgs/products/${item.cate_name}/${item.prod_img_urls[i]}`;
        img.alt = "Product img";

        link.appendChild(img);
        imgItem.appendChild(link);
        imgSelect.appendChild(imgItem);
      }

      modalImg.appendChild(imgSelect);

      // Append the modal__img element to the appropriate parent element

      const buttonClose = document.createElement("div");
      buttonClose.classList.add("button-close", "button-close1");

      // Create the span element
      const span = document.createElement("span");
      span.classList.add("material-symbols-outlined");
      span.textContent = "close";

      buttonClose.appendChild(span);

      // Append the button-close element to the appropriate parent element
      modalContainer.appendChild(modalImg);
      modalContainer.appendChild(divModalBody);
      modalContainer.appendChild(buttonClose);
      const productWrapper = document.querySelector(".product__wrapper");
      productWrapper.appendChild(modalProduct);
      console.log(modalProduct);
    }

    category.forEach((item) => {
      item.addEventListener("click", () => {
        const selectedCategory = item.dataset.category;
        fetch("/products/category", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          // body: JSON.stringify({ category: selectedCategory })
          body: JSON.stringify({
            category: selectedCategory,
          }),
        })
        .then((respone) => respone.json())
        .then((data) => {
          // console.log("this is data :", data.result);
          $(".product__wrapper").empty();

          data.result.forEach((item) => {
            createProduct(item);
          });
        });
      });
    });
  </script>

  <script>
    // add pop-up when click to Quick View button
    $(document).on("click", ".product__button__view", function(e) {
      e.preventDefault();
      var index = $(this).index(".product__button__view");
      console.log(index);
      $(".modal-product").eq(index).addClass("open");
    });

    $(document).on("click", ".button-close", function() {
      $(".modal-product").removeClass("open");
    });
  </script>
</body>

</html>